from django.db import migrations, transaction
from vast_pipeline.utils.utils import deg2hms, deg2dms


def _make_source_name(ra: float, dec: float, iau: bool = True) -> str:
    return (
        f"J{deg2hms(ra, precision=1, truncate=iau)}"
        f"{deg2dms(dec, precision=0, truncate=iau)}"
    ).replace(":", "")


def update_source_names(apps, schema_editor):
    """Update source names that were generated by rounding coordinates instead of
    truncating. Truncating is required by IAU convention."""
    Source = apps.get_model("vast_pipeline", "Source")

    BATCH_SIZE = 1000
    sources = Source.objects.filter(name__startswith="J")
    start = 0
    end = start + BATCH_SIZE
    sources_batch = sources[start:end]
    while sources_batch.exists():
        with transaction.atomic():
            sources_batch_list = list(sources_batch)
            for source in sources_batch_list:
                source.name = _make_source_name(
                    source.wavg_ra, source.wavg_dec, iau=True
                )
            _ = Source.objects.bulk_update(sources_batch_list, ["name"])
        start = end
        end = start + BATCH_SIZE
        sources_batch = sources[start:end]


def reverse_update_source_names(apps, schema_editor):
    """Undo the above update source names by rounding coordinates instead of truncating."""
    Source = apps.get_model("vast_pipeline", "Source")

    BATCH_SIZE = 1000
    sources = Source.objects.filter(name__startswith="J")
    start = 0
    end = start + BATCH_SIZE
    sources_batch = sources[start:end]
    while sources_batch.exists():
        with transaction.atomic():
            sources_batch_list = list(sources_batch)
            for source in sources_batch_list:
                source.name = _make_source_name(
                    source.wavg_ra, source.wavg_dec, iau=False
                )
            _ = Source.objects.bulk_update(sources_batch_list, ["name"])
        start = end
        end = start + BATCH_SIZE
        sources_batch = sources[start:end]


class Migration(migrations.Migration):
    atomic = False

    dependencies = [
        ("vast_pipeline", "0009_add_log_file_timestamps"),
    ]

    operations = [
        migrations.RunPython(
            update_source_names, reverse_code=reverse_update_source_names, atomic=False
        ),
    ]
